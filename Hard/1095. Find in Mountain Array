/**
 * // This is MountainArray's API interface.
 * // You should not implement it, or speculate about its implementation
 * interface MountainArray {
 *     public int get(int index) {}
 *     public int length() {}
 * }
 */
 
class Solution {
    public int findInMountainArray(int target, MountainArray mountainArr) {
        int start = 0;
        int end = mountainArr.length()-1;
        int mid = 0;
        while(start < end){
            mid = start + (end-start)/2;
            if(mountainArr.get(mid) < mountainArr.get(mid+1)){
                start = mid + 1;
            }
            else end = mid;
        }
        int t = ascending(0, end, target, mountainArr);
        if(t != -1){
            return t;
        }
        t = descending(end, mountainArr.length()-1, target, mountainArr);
        return t;
    }
    public int ascending(int start, int end, int t, MountainArray mountainArr){
        while(start<=end){
            int mid = start + (end-start)/2;
            if(mountainArr.get(mid)>t){
                end = mid - 1;
            }
            else if(mountainArr.get(mid)<t){
                start = mid + 1;
            }
            else return mid;
        }
        return -1;
    }

    public int descending(int start, int end, int t, MountainArray mountainArr){
        while(start<=end){
            int mid = start + (end-start)/2;
            if(mountainArr.get(mid)>t){
                start = mid + 1;
            }
            else if(mountainArr.get(mid)<t){
                end = mid - 1;
            }
            else return mid;
        }
        return -1;
    }
}
