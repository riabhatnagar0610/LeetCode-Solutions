class Solution {
    public int minSpeedOnTime(int[] dist, double hour) {
        int i = 1;
        int j = (int)1e7;
        int min = -1;
        while(i <= j){
            int mid = i + (j - i)/2;
            if(isPossible(dist, mid, hour)){
                min = mid;
                j = mid - 1;
            }
            else{
                i = mid + 1;
            }
        }
        return min;
    }
    public boolean isPossible(int[] dist, int mid, double hour){
        double total = 0;
        for(int i = 0; i < dist.length; i++){
            double curr = (double)dist[i] / (double)mid; // dist/speed = time
            if(i != dist.length - 1){
                total += Math.ceil(curr);
            }
            else{
                total += curr;
            }
            if(total > hour) return false;
        }
        return total <= hour;
    }
}
