//memoization
class Solution {
    public int numDecodings(String s) {
        int n = s.length();
        int[] dp = new int[n];
        Arrays.fill(dp, -1);
        if(n==0) return 0;
        else return solve(0, s, dp);
    }
    public int solve(int i, String s, int[] dp){
        int n = s.length();
        if(i==n) return 1;
        if(s.charAt(i)=='0') return 0;
        if(dp[i] != -1) return dp[i];
        int ans = solve(i+1, s, dp);
        if(i < n-1 && (s.charAt(i)=='1' || s.charAt(i)=='2' && s.charAt(i+1) < '7')){
            ans += solve(i+2, s, dp);
        }
        return dp[i]=ans;
    }
}

//tabulation
class Solution {
    	public int numDecodings(String s) {
        int n=s.length();
        int[] dp=new int[n+1];
        dp[n]=1;
        for(int i=n-1;i>=0;i--)
            if(s.charAt(i)!='0') {
                dp[i]=dp[i+1];
                if(i<n-1&&(s.charAt(i)=='1'||s.charAt(i)=='2'&&s.charAt(i+1)<'7')) 
					dp[i]+=dp[i+2];
            }
        return dp[0];   
    }
}
