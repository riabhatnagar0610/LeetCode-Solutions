class Solution {
    public void nextPermutation(int[] nums) {
        int index1 = -1;
        int index2 = -1;
        //find break point
        for(int i = nums.length-2; i >= 0; i--){
            if(nums[i+1] > nums[i]){
                index1 = i;
                break;
            }
        }
        //if no break point
        if(index1 == -1){
            reverse(nums, 0, nums.length-1);
        }
        else{
            //find next greater than break point
            for(int i = nums.length-1; i >= 0; i--){
                if(nums[i]>nums[index1]){
                    index2 = i;
                    break;
                }
            }

            swap(nums, index1, index2); //swap
            reverse(nums, index1+1, nums.length-1); //reverse right half
        }
    }
    public void swap(int[] nums, int i, int j){
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
    public void reverse(int[] nums, int start, int end){
        while(start < end){
            swap(nums, start, end);
            start++;
            end--;
        }
    }
}
