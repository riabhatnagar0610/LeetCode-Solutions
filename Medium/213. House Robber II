class Solution {
    public int rob(int[] nums) {
        if(nums.length == 1) return nums[0];
        int[] dp1 = new int[nums.length+2];
        int[] dp2 = new int[nums.length+2];
        int ans1 = 0;
        int ans2 = 0;
        //leaving last house
        for(int i = nums.length-2; i >= 0; i--){
            int take = nums[i] + dp1[i+2];
            int nottake = dp1[i+1];
            dp1[i] = Math.max(take, nottake);
        }
        ans1 = dp1[0];
        //leaving first house
        for(int i = nums.length-1; i >= 1; i--){
            int take = nums[i] + dp2[i+2];
            int nottake = dp2[i+1];
            dp2[i] = Math.max(take, nottake);
        }
        ans2 = dp2[1];
        return Math.max(ans1, ans2);
    }
}
