class Solution {
    public int minPathSum(int[][] grid) {
        int m = grid.length;
        int n = grid[0].length;
        int[][] dp = new int[m][n];
        for(int[] row : dp) Arrays.fill(row, -1);
        return minPath(grid, m-1, n-1, dp);
    }
    private int minPath(int[][] grid, int i, int j, int[][] dp){
        if(i==0 && j==0) return grid[0][0];
        if(i<0 || j<0) return 99999;
        if(dp[i][j] != -1) return dp[i][j];
        int up = grid[i][j] + minPath(grid, i-1, j, dp);
        int left = grid[i][j] + minPath(grid, i, j-1, dp);
        return dp[i][j] = Math.min(up, left);
    }
}
